<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:batch="http://www.springframework.org/schema/batch"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch.xsd">
		
		<!-- ItemReader which reads data from XML file -->
	<bean id="xmlItemReader" class="org.springframework.batch.item.xml.StaxEventItemReader">
		<property name="resource" value="classpath:com/nt/xml/fineGrainedGraduates.xml" />
		<property name="fragmentRootElementName" value="ExamResult" />
		<property name="unmarshaller">
			<bean class="org.springframework.oxm.jaxb.Jaxb2Marshaller">
				<property name="classesToBeBound">
					<list>
						<value>com.nt.model.ExamResult</value>
					</list>
				</property>
			</bean>
		</property>
	</bean>
		
	<!-- ItemWriter which writes data to database -->
  	<bean id="dbItemWriter" class="org.springframework.batch.item.database.JdbcBatchItemWriter">
		<property name="dataSource" ref="dbcpDs" />
		<property name="sql">
		  	<value>
	            <![CDATA[        
	            	INSERT INTO EXAM_RESULT VALUES (?,?,?,?)
	            ]]>
		  	</value>
		</property>

		<!-- We need a custom setter to set values to Query param by getting values ExamResult object  -->
		<property name="itemPreparedStatementSetter">
			<bean class="com.nt.batchsetter.ExamResultItemPreparedStatementSetter"/>
		</property>
  </bean>
  

	

	<!-- Item Processor -->
	<bean id="itemProcessor" class="com.nt.processor.ExamResultItemProcessor"/>
	
	<batch:job id="job"  job-repository="jobRep">
	   <batch:step id="step1" >
	     <batch:tasklet transaction-manager="txMgmr">
	        <batch:chunk reader="xmlItemReader" writer="dbItemWriter" processor="itemProcessor" commit-interval="2"/>
	     </batch:tasklet>
	   </batch:step>
	</batch:job>
</beans>
